{"version":3,"sources":["images/tiana.png","images/anna.png","images/ariel.png","images/aurora.png","images/belle.jpg","images/elsa.jpg","images/jasmine.png","images/moana.png","images/mulan.png","images/pocahontas.png","images/rapunzel.png","images/raya.jpeg","Components/Modal.js","Components/Game.js","App.js","index.js"],"names":["Modal","props","ReactDOM","createPortal","CSSTransition","in","show","unmountOnExit","timeout","enter","exit","className","onClick","onClose","e","stopPropagation","title","children","document","getElementById","Game","matchCount","useState","openCard","setOpenCard","Set","matched","setMatched","princessPairs","setPrincessPairs","setShow","countMove","setCountMove","princesses","id","name","src","tiana","anna","ariel","aurora","belle","elsa","jasmine","moana","mulan","pocahontas","rapunzel","raya","useLayoutEffect","reset","ps","shuffle","slice","useEffect","firstMatch","secondMatch","currentMatch","add","length","setTimeout","size","map","princess","index","flipCard","includes","has","opened","handleFlip","alt","width","App","level","setLevel","render"],"mappings":"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","file":"static/js/main.b9a185b6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/tiana.d6c09b5c.png\";","export default __webpack_public_path__ + \"static/media/anna.b64a32c6.png\";","export default __webpack_public_path__ + \"static/media/ariel.269f528d.png\";","export default __webpack_public_path__ + \"static/media/aurora.fb505559.png\";","export default __webpack_public_path__ + \"static/media/belle.529fb2d5.jpg\";","export default __webpack_public_path__ + \"static/media/elsa.d093f80a.jpg\";","export default __webpack_public_path__ + \"static/media/jasmine.0744dbe7.png\";","export default __webpack_public_path__ + \"static/media/moana.0859844e.png\";","export default __webpack_public_path__ + \"static/media/mulan.3a6dfda2.png\";","export default __webpack_public_path__ + \"static/media/pocahontas.a86600f9.png\";","export default __webpack_public_path__ + \"static/media/rapunzel.947d2cd7.png\";","export default __webpack_public_path__ + \"static/media/raya.6c6d627a.jpeg\";","import React from 'react'\nimport './Modal.css'\nimport ReactDOM from 'react-dom'\nimport { CSSTransition } from 'react-transition-group'\n\nconst Modal = props => {\n\n  return ReactDOM.createPortal(\n    <CSSTransition\n      in={props.show}\n      unmountOnExit\n      timeout={{ enter: 0, exit: 300 }}\n    >\n      <div className={'modal show'} onClick={props.onClose}>\n        <div className='modal-content' onClick={e => e.stopPropagation()}>\n          <div className='modal-header'>\n            <h4 className='modal-title'>\n              {props.title}\n            </h4>\n          </div>\n          <div className='modal-body'>\n            {props.children}\n          </div>\n          <div className='modal-footer'>\n            <button className='button' onClick={props.onClose}>Play Again!</button>\n          </div>\n        </div>\n      </div>\n    </CSSTransition>,\n    document.getElementById('root')\n  )\n\n}\nexport default Modal","import './Game.css';\nimport React, {useState, useEffect, useLayoutEffect} from \"react\";\nimport tiana from \"../images/tiana.png\";\nimport anna from \"../images/anna.png\";\nimport ariel from \"../images/ariel.png\";\nimport aurora from \"../images/aurora.png\";\nimport belle from \"../images/belle.jpg\";\nimport elsa from \"../images/elsa.jpg\";\nimport jasmine from \"../images/jasmine.png\";\nimport moana from \"../images/moana.png\";\nimport mulan from \"../images/mulan.png\";\nimport pocahontas from \"../images/pocahontas.png\";\nimport rapunzel from \"../images/rapunzel.png\";\nimport raya from \"../images/raya.jpeg\";\nimport shuffle from \"lodash/shuffle\";\nimport Modal from \"./Modal\";\n\nfunction Game(props) {\n  const { matchCount } = props\n  const [openCard, setOpenCard] = useState([])\n  const [matched, setMatched] = useState(new Set())\n  const [princessPairs, setPrincessPairs] = useState([])\n  const [show, setShow] = useState(false)\n  const [countMove, setCountMove] = useState(0)\n\n  const princesses = [\n    { id: 0, name: 'Tiana', src: tiana },\n    { id: 1, name: 'Anna', src: anna },\n    { id: 2, name: 'Ariel', src: ariel },\n    { id: 3, name: 'Aurora', src: aurora },\n    { id: 4, name: 'Belle', src: belle },\n    { id: 5, name: 'Elsa', src: elsa },\n    { id: 6, name: 'Jasmine', src: jasmine },\n    { id: 7, name: 'Moana', src: moana },\n    { id: 8, name: 'Mulan', src: mulan },\n    { id: 9, name: 'Pocahontas', src: pocahontas },\n    { id: 10, name: 'Rapunzel', src: rapunzel },\n    { id: 11, name: 'Raya', src: raya },\n  ]\n\n  useLayoutEffect(() => {\n    reset()\n    const ps = shuffle(princesses).slice(0, matchCount)\n    setPrincessPairs(shuffle([...ps, ...ps]))\n  }, [matchCount])\n\n  useEffect(() => {\n    const firstMatch = princessPairs[openCard[0]]\n    const secondMatch = princessPairs[openCard[1]]\n\n    if (secondMatch) setCountMove(countMove + 1)\n\n    if (secondMatch && firstMatch.id === secondMatch.id) {\n      setMatched((currentMatch) => {\n        currentMatch.add(firstMatch.id)\n        return new Set(currentMatch)\n      })\n    }\n\n    if (openCard.length === 2) setTimeout(() => setOpenCard([]), 1000)\n\n  }, [openCard])\n\n  useEffect(() => {\n    if (matched.size === matchCount) {\n      setTimeout(() => setShow(true), 800)\n    }\n  }, [matched])\n\n  const handleFlip = index => {\n    // if the card we just clicked on has already been matched, then return early\n    if (matched.has(princessPairs[index].id)) return\n    // also check if second chosen card is same index as first card\n    if (openCard.length === 1 && openCard[0] === index) return\n\n    setOpenCard((opened) => [...opened, index])\n  }\n\n  const reset = () => {\n    setOpenCard([])\n    setMatched(new Set())\n    setCountMove(0)\n    setPrincessPairs(shuffle([...princesses, ...princesses]))\n  }\n\n  const onClose = () => {\n    setShow(false)\n    reset()\n  }\n\n  return (\n    <div>\n      { show &&\n      <Modal title='Congratulations!' onClose={onClose} show={show}>\n        <p>You won!</p>\n        <p>You made {countMove} moves</p>\n      </Modal>\n      }\n      <p>Moves: {countMove}</p>\n      <div className={matchCount === 8 ? 'cards-easy' : 'cards'}>\n        {princessPairs.map((princess, index) => {\n\n          let flipCard = false\n\n          if (openCard.includes(index))\n            flipCard = true\n\n          if (matched.has(princess.id))\n            flipCard = true\n\n          return (\n            <div className={`princess-card ${flipCard ? 'flipped' : ''}`}\n                 key={index}\n                 onClick={() => handleFlip(index)}\n\n            >\n              <div className='inner'>\n                <div className='front'>\n                  <img\n                    src={princess.src}\n                    alt='princess'\n                    width='100'\n                  />\n                </div>\n                <div className='back'></div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Game;\n","import './App.css';\nimport React, { useState } from \"react\";\nimport Game from \"./Components/Game\";\n\nfunction App() {\n\n  const [level, setLevel] = useState(null)\n  const levelMatchCountMap = {\n    'easy': 8,\n    'hard': 12\n  }\n\n  return (\n    <div className=\"App\">\n      <div className='title'><h1>Memory Game</h1></div>\n      <div className='levels'>\n        <p>Choose a level:</p>\n        <div className='levels-buttons'>\n          <button className={level === 'easy' ? 'active' : ''} onClick={() => setLevel('easy') }>Easy</button>\n          <button className={level === 'hard' ? 'active' : ''} onClick={() => setLevel('hard') }>Hard</button>\n        </div>\n      </div>\n      {/*{ !level ? null : <Game /> }*/}\n      { level && <Game matchCount={levelMatchCountMap[level]}/> }\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}